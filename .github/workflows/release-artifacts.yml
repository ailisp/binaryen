on:
  push:
    tags:
      - "v[0-9]+.*"
    branches:
      - add-linux-arm64
jobs:
  # create_release:
  #   name: Create release
  #   runs-on: ubuntu-20.04
  #   outputs:
  #     upload_url: ${{ steps.create_release.outputs.upload_url }}
  #   steps:
  #     - name: Create release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: ${{ github.ref }}
  #         draft: false
  #         prerelease: false
  release_assets:
    name: Release assets
    needs: create_release # we need to know the upload URL
    runs-on: ${{ matrix.platform }} # we run many different builds
    strategy:
      matrix:
        platform: [ubuntu-22.04, buildjet-2vcpu-ubuntu-2204-arm, macos-13, macos-14]
    steps:
      # checkout
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Build binaryen
        run: cmake . && make
      - name: Build wasi-stub
        run: cd wasi-stub && ./build.sh && cd ..
      - name: Package release asset
        run: tar -czvf binaryen.tar.gs lib wasi-stub/run.sh wasi-stub/wasi-stub
      - name: Print release
        run: cat binaryen-${{ runner.os }}-${{ runner.arch }}.tar.gz
      # - name: Upload release asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.create_release.outputs.upload_url }}
      #     # This is how it will be named on the release page.
      #     asset_name: binaryen-${{ runner.os }}-${{ runner.arch }}.tar.gz
      #     # The path to the file you want to upload.
      #     asset_path: ./binaryen.tar.gs
      #     # set type of the file you are uploading
      #     asset_content_type: application/octet-stream
